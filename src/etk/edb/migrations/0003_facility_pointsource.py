# Generated by Django 3.2.18 on 2023-05-09 14:53

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("edb", "0002_timevar"),
    ]

    operations = [
        migrations.CreateModel(
            name="Facility",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time of creation"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="time of last update"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="user-defined key-value pairs",
                    ),
                ),
                (
                    "official_id",
                    models.CharField(
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="official_id",
                    ),
                ),
            ],
            options={
                "default_related_name": "facilities",
            },
        ),
        migrations.CreateModel(
            name="PointSource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time of creation"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="time of last update"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="user-defined key-value pairs",
                    ),
                ),
                (
                    "chimney_height",
                    models.FloatField(default=0, verbose_name="chimney height [m]"),
                ),
                (
                    "chimney_outer_diameter",
                    models.FloatField(
                        default=1.0, verbose_name="chimney outer diameter [m]"
                    ),
                ),
                (
                    "chimney_inner_diameter",
                    models.FloatField(
                        default=0.9, verbose_name="chimney inner diameter [m]"
                    ),
                ),
                (
                    "chimney_gas_speed",
                    models.FloatField(
                        default=1.0, verbose_name="chimney gas speed [m/s]"
                    ),
                ),
                (
                    "chimney_gas_temperature",
                    models.FloatField(
                        default=373.0, verbose_name="chimney gas temperature [K]"
                    ),
                ),
                (
                    "house_width",
                    models.IntegerField(
                        default=0,
                        verbose_name="house width [m] (to estimate down draft)",
                    ),
                ),
                (
                    "house_height",
                    models.IntegerField(
                        default=0,
                        verbose_name="house height [m] (to estimate down draft)",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        db_index=True,
                        geography=True,
                        srid=4326,
                        verbose_name="the position of the point-source",
                    ),
                ),
                (
                    "activitycode1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="edb.activitycode",
                    ),
                ),
                (
                    "activitycode2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="edb.activitycode",
                    ),
                ),
                (
                    "activitycode3",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="edb.activitycode",
                    ),
                ),
                (
                    "facility",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pointsources",
                        to="edb.facility",
                    ),
                ),
                (
                    "timevar",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="edb.timevar",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "pointsources",
                "unique_together": {("facility", "name")},
                "index_together": {("activitycode1", "activitycode2", "activitycode3")},
            },
        ),
    ]
