# Generated by Django 3.2.18 on 2023-05-17 06:57

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models

import etk.edb.ltreefield
import etk.edb.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="name of activity"
                    ),
                ),
                (
                    "unit",
                    models.CharField(max_length=100, verbose_name="unit of activity"),
                ),
            ],
            options={
                "default_related_name": "activities",
            },
        ),
        migrations.CreateModel(
            name="ActivityCode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", etk.edb.ltreefield.LtreeField(verbose_name="activity code")),
                (
                    "label",
                    models.CharField(
                        max_length=100, verbose_name="activity code label"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=64, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=64, unique=True, verbose_name="slug"),
                ),
                (
                    "srid",
                    models.IntegerField(
                        help_text="Spatial reference system identifier",
                        verbose_name="SRID",
                    ),
                ),
                (
                    "extent",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        geography=True, srid=4326, verbose_name="extent"
                    ),
                ),
                ("timezone", models.CharField(max_length=64, verbose_name="timezone")),
            ],
            options={
                "db_table": "domains",
                "default_related_name": "domains",
            },
        ),
        migrations.CreateModel(
            name="Facility",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time of creation"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="time of last update"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="user-defined key-value pairs",
                    ),
                ),
                (
                    "official_id",
                    models.CharField(
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="official_id",
                    ),
                ),
            ],
            options={
                "default_related_name": "facilities",
            },
        ),
        migrations.CreateModel(
            name="Substance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=64, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=64, unique=True, verbose_name="slug"),
                ),
                (
                    "long_name",
                    models.CharField(max_length=64, verbose_name="long name"),
                ),
            ],
            options={
                "db_table": "substances",
                "default_related_name": "substances",
            },
        ),
        migrations.CreateModel(
            name="Timevar",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "typeday",
                    models.CharField(
                        default="[[100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0]]",  # noqa
                        max_length=12240,
                    ),
                ),
                (
                    "month",
                    models.CharField(
                        default="[100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0]",  # noqa
                        max_length=840,
                    ),
                ),
                ("typeday_sum", models.FloatField(editable=False)),
                ("_normalization_constant", models.FloatField(editable=False)),
            ],
            options={
                "abstract": False,
                "default_related_name": "timevars",
            },
        ),
        migrations.CreateModel(
            name="VerticalDist",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("slug", models.SlugField(max_length=64)),
                (
                    "weights",
                    models.CharField(
                        default=etk.edb.models.default_vertical_dist, max_length=100
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vertical_dists",
                        to="edb.domain",
                    ),
                ),
            ],
            options={
                "unique_together": {("domain", "slug"), ("domain", "name")},
            },
        ),
        migrations.CreateModel(
            name="PointSource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time of creation"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="time of last update"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="user-defined key-value pairs",
                    ),
                ),
                (
                    "chimney_height",
                    models.FloatField(default=0, verbose_name="chimney height [m]"),
                ),
                (
                    "chimney_outer_diameter",
                    models.FloatField(
                        default=1.0, verbose_name="chimney outer diameter [m]"
                    ),
                ),
                (
                    "chimney_inner_diameter",
                    models.FloatField(
                        default=0.9, verbose_name="chimney inner diameter [m]"
                    ),
                ),
                (
                    "chimney_gas_speed",
                    models.FloatField(
                        default=1.0, verbose_name="chimney gas speed [m/s]"
                    ),
                ),
                (
                    "chimney_gas_temperature",
                    models.FloatField(
                        default=373.0, verbose_name="chimney gas temperature [K]"
                    ),
                ),
                (
                    "house_width",
                    models.IntegerField(
                        default=0,
                        verbose_name="house width [m] (to estimate down draft)",
                    ),
                ),
                (
                    "house_height",
                    models.IntegerField(
                        default=0,
                        verbose_name="house height [m] (to estimate down draft)",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        db_index=True,
                        geography=True,
                        srid=4326,
                        verbose_name="the position of the point-source",
                    ),
                ),
                (
                    "activitycode1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="edb.activitycode",
                    ),
                ),
                (
                    "activitycode2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="edb.activitycode",
                    ),
                ),
                (
                    "activitycode3",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="edb.activitycode",
                    ),
                ),
                (
                    "facility",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pointsources",
                        to="edb.facility",
                    ),
                ),
                (
                    "timevar",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="edb.timevar",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "pointsources",
                "unique_together": {("facility", "name")},
                "index_together": {("activitycode1", "activitycode2", "activitycode3")},
            },
        ),
        migrations.CreateModel(
            name="CodeSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("slug", models.SlugField(max_length=64)),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="code_sets",
                        to="edb.domain",
                    ),
                ),
            ],
            options={
                "unique_together": {("domain", "slug"), ("domain", "name")},
            },
        ),
        migrations.AddField(
            model_name="activitycode",
            name="code_set",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="codes",
                to="edb.codeset",
            ),
        ),
        migrations.AddField(
            model_name="activitycode",
            name="vertical_dist",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="edb.verticaldist",
            ),
        ),
        migrations.CreateModel(
            name="PointSourceSubstance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.FloatField(default=0, verbose_name="source emission")),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="date of last update"
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="substances",
                        to="edb.pointsource",
                    ),
                ),
                (
                    "substance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="edb.substance",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "substances",
                "unique_together": {("source", "substance")},
            },
        ),
        migrations.AddConstraint(
            model_name="activitycode",
            constraint=models.UniqueConstraint(
                fields=("code_set", "code"), name="unique code in codeset"
            ),
        ),
    ]
